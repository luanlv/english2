var wsCtrl = require('../_wsCtrl.js');
var api = require('../_api.msx');

var Partial = {};

Partial.post = function(post, ctrl){
  return(
      <div className="ui home-post-Wr">
        <div className="ui postContainer postDemo">
          <div className="ui list">
            <div className="item">

              <span className="fl avatar">
                <a className="route ulpt" href={"/@/" + post.user.id}>
                  <img className="image" src={(post.user.avatar.length>0)?(wsCtrl.static + "/getimage/thumb/" + post.user.avatar):(wsCtrl.defaultAvata)} />
                </a>
              </span>
              <div className="content">
                <span className="header"><a className="name route ulpt" href={"/@/" + post.user.id}>{post.user.name}</a></span>
                <div className="description">{api.time(post.published)}</div>
              </div>
            </div>
          
          </div>
          <div className="content-post">
            {m.trust(api.post(post.content))}
          </div>
          
          <div className="ui horizontal list extra-post">
            <div className="item">
              <a className="mini ui  basic button" data-content="Thích" data-position="top left"
                 config={function(el, isInited){
                   if(!isInited){
                     $(el)
                         .popup({
                           inline: true
                         })
                     ;
                   }
                 }
                 }
                 onclick = {function(){
                   $.post( ((post.likes === undefined || post.likes.length < 0)?"/like":"/unlike") + "/post/" + post.id,
                       function(data) {
                         if(data === "liked"){
                           post.likeCount += 1;
                           post.likes = [wsCtrl.userId]
                         } else if( data === "unliked"){
                           post.likeCount -= 1;
                           post.likes = undefined;
                         }
                         rd.home(function(){m.redraw()});
                       }
                   );
                 }}
              >
                <i className={((post.likes === undefined || post.likes.length < 0)?"":"blue") + " heart icon"}></i>
                {post.likeCount}
              </a>
            </div>
            <div className="item">
              <a className="mini ui basic button" data-content="Bình luận" data-position="top left"
                 config={function(el, isInited){
                   if(!isInited){
                     $(el)
                         .popup({
                           inline: true
                         })
                     ;
                   }
                 }
                 }
                 onclick={function(e){
                   if(m.route.param('post') === undefined){
                     m.route('/post/' + post.id);
                     //console.log(m.route.param("_post"))
                     //wsCtrl.request = api.requestWithFeedback2({method: "GET", url: "/viewpost/" + post.id}, wsCtrl.post, ctrl.setup);
                     //wsCtrl.send(wsCtrl.sendData("subPost", {id: post.id}));
                     //api.showPost(post.id);
                     rd.home(function(){m.redraw()})
                   }
                 }}
              >
                <i className="comment icon"></i>
                {post.commentCount}
              </a>
            </div>
            {/*<div className="item">*/}
            {/*<a className="mini ui basic button" data-content="share" data-position="top left"*/}
            {/*config={function(el, isInited){*/}
            {/*if(!isInited){*/}
            {/*$(el).popup({inline: true});*/}
            {/*}*/}
            {/*}*/}
            {/*}*/}
            {/*>*/}
            {/*<i className="share icon"></i>*/}
            {/*{post.shareCount}*/}
            {/*</a>*/}
            {/*</div>*/}
          
          
          </div>
        </div>
        <span className="right floated post-arrow" >
            <a className="route" data-content={(m.route.param('postId') === undefined)?"Vào xem":"Quay lại"} data-position="top left"
               href={(m.route.param('postId') === undefined)?("/post/" + post.id):("/")}
               config={function(el, isInited){
                 if(!isInited){
                   $(el).popup({inline: true});
                 }
               }
               }
            ><i className={((m.route.param('postId') === undefined)?"large  grey indent":"large  grey reply all") +" icon link-post"}></i></a>
          </span>
      </div>
  )
};

Partial.ShowPost = function(ctrl){
  return(
      (wsCtrl.request === undefined || !wsCtrl.request.ready())?(
          <div className="ui home-post-Wr">
            <div className="ui postContainer postDemo">
              <div className="ui segment loading" style="min-height: 600px;">
              </div>
            </div>
          </div>
      ):(
          <div className="ui home-post-Wr">
            <div className="ui postContainer postDemo">
              {Partial.post(wsCtrl.post().post)}
              <div id="comment">
                
                
                <div className="ui threaded comments parent-comments">
                  <h2>Bình luận</h2>
                  {((wsCtrl.post().post.commentCount - wsCtrl.post().post.commentShow) > 0)?[
                    <a href="#comment"
                       style="color: #3b5998; font-size: 13px !important;"
                       onclick={function(e){
                         var source = e.target || e.srcElement;
                      
                         ctrl.moreComment(wsCtrl.post().post.id, wsCtrl.post().comment[0].time);
                         // alert("123");
                       }}
                    >View more comments</a>
                  ]:("")}
                  {wsCtrl.post().comment.map(function(comment){
                    
                    return (
                        <div className="comment">
                          <span className="avatar">
                              <a className="route ulpt" href={"/@/" + comment.user.id} >
                                <img src={(comment.user.avatar.length>0)?(wsCtrl.static + "/getimage/small/" + comment.user.avatar):wsCtrl.defaultAvata} />
                              </a>
                          </span>
                          <div className="content">
                            <span className="author">
                              <a className="fl route ulpt" href={"/@/" + comment.user.id} >
                                {comment.user.name}
                              </a>
                            </span>
                            <div className="metadata">
                              <span className="date">{api.time(comment.time)}</span>
                            </div>
                            <div className="text">
                              {m.trust(api.post(comment.comment))}
                            </div>
                            <div className="actions">
                              {comment.replay?"":(
                                  <a className="reply"
                                     onclick={function(){
                                       comment.replay = true;
                                       comment.input = m.prop('');
                                       rd.home(function(){m.redraw()});
                                     }}
                                  >Trả lời</a>
                              )}
                            </div>
                          </div>
                          
                          {(comment.replay || comment.children.length > 0)?[
                            (comment.children.length>0)?(
                                <div className="comments child-comments">
                                  {/*{comment.childCount > 2 ?(<a href="#">View more comments</a>):("")}*/}
                                  {comment.children.map(function(childComment){
                                    return (
                                        <div className="comment">
                                        <span className="avatar">
                                            <a className="route ulpt" href={"/@/" + childComment.user.id} >
                                              <img src={(childComment.user.avatar.length>0)?(wsCtrl.static + "/getimage/small/" + childComment.user.avatar):wsCtrl.defaultAvata} />
                                            </a>
                                        </span>
                                          <div className="content">
                                          <span className="author">
                                            <a className="fl route ulpt" href={"/@/" + childComment.user.id} >
                                              {childComment.user.name}
                                            </a>
                                          </span>
                                            <div className="metadata">
                                              <span className="date">{api.time(childComment.time)}</span>
                                            </div>
                                            <div className="text">
                                              {m.trust(api.post(childComment.comment))}
                                            </div>
                                            <div className="actions">
                                              <a className="reply"
                                                 onclick={function(){
                                                   comment.replay = true;
                                                   comment.input = m.prop('');
                                                   rd.home(function(){m.redraw()});
                                                 }}
                                              >Reply</a>
                                            </div>
                                          </div>
                                        </div>
                                    )
                                  })}
                                </div>):(""),
                            (comment.replay)?(
                                <div className="comments childComment">
                                  {Partial.Comment(ctrl, ctrl.addChildComment, comment.id, comment.input, wsCtrl.post().post.id)}
                                </div>
                            ):("")
                          ]:("") }
                        </div>
                    )
                  })}
                
                </div>
                
                <div className="ui threaded comments">
                  {Partial.Comment(ctrl, ctrl.addComment, wsCtrl.post().post.id, ctrl.inputComment)}
                </div>
              
              </div>
            </div>
          </div>
      
      )
  )
};

Partial.Comment = function(ctrl, action, actionId, input, actionId2){
  return (
      <div className="comment">
        <a className="avatar">
          <img src={(wsCtrl.avatar.length>0)?(wsCtrl.static + "/getimage/small/" + wsCtrl.avatar):wsCtrl.defaultAvata} height="35" width="35"/>
        </a>
        <div className="ui form content">
          <div className="field" style="display:inline">
                        <textarea rows="1" style="max-height: 92px"
                                  config={function (element, isInit, ctx) {
                                    if(!isInit) {
                                      if(wsCtrl.userId.length == 0){
                                        $(element).on('click input', function(){
                                          api.signin();
                                          element.value = ''
                                        })
                                      } else {
                                        $(element).on('input', function(){
                                          input($(element).val())
                                        });
                                      }
                                      $(element).textareaAutoSize();
                                    }
                                    element.value = input();
                                    if(element.value.length<1){
                                      $(element).css('height', '41')
                                    }
                                  }
                                  }
                                  onkeypress={function(e){
                                    if(e.keyCode == 13 && !e.shiftKey) {
                                      m.redraw.strategy("none");
                                      if (input().length < 1) {
                                        console.log("chat length < 1")
                                        return false;
                                      } else {
                                        var source = e.target || e.srcElement;
                                        if(actionId2 !== undefined) {
                                          action(actionId, input, actionId2);
                                        } else {
                                          action(actionId, input);
                                        }
                                        return false;
                                      }
                                    }else{
                                      m.redraw.strategy("none");
                                      if(e.keyCode == 13 && e.shiftKey && input().length < 1){
                                        return false;
                                      }
                                    }
                                  }
                                  }
                                  placeholder="Click here to type a comment"
                        >{}</textarea>
          </div>
        </div>
      </div>
  )
};


module.exports = Partial;