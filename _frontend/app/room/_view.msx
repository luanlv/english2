var wsCtrl = require('../_wsCtrl.js');
var api = require('../_api.msx');
var Partial = require('./_partial.msx');

var RoomView = function(ctrl) {
  return (
      <div className="ui grid main-content ">
        <div className="eleven wide column room-chat">
          <div className="ui segment segWr">
            <div className="ui padded grid">
              <div className="thirteen wide  column light-border-right pad-bot0">
                {Partial.Comments(ctrl)}
              </div>
              <div className="three wide column">
                <div className="room-user">
                  
                  <h5 className="ui dividing header">List Users !
                  </h5>
                  <div>
                    <div>
                      {(!wsCtrl.getRoom(ctrl.id).initOk)?(
                          <div className="ui active loader"></div>
                      ):(
                          <div className="ui list users-in-room">
                            {wsCtrl.userInRoom(ctrl.id).map(function(user){
                              return (
                                  
                                  <div className="item">
                                    
                                    <i className={"user " + ((user.role == "Admin")?"red":((user.role == "Mod")?"yellow":"blue"))  +" icon"}></i>
                                    
                                    <div className="content" >
                                      <a className="ulpt" href={"/@/" + user.id} config={m.route}>
                                        {user.name}
                                      </a>
                                    </div>
                                  </div>
                              
                              )
                            })}
                          </div>
                      )
                      }
                    </div>
                  
                  </div>
                </div>
              </div>
            </div>
            <div className="ui padded grid ">
              <div className="thirteen wide column light-border-right pad-top0">
                <div className="ui divider"></div>
                <div className="ui comments mar0">
                  <div className="comment">
                    <a className="avatar">
                      <img src={(wsCtrl.avatar.length>0)?(wsCtrl.static + "/getimage/thumb/" + wsCtrl.avatar):("/assets/avatar/2.jpg")}/>
                    </a>
                    <div className="ui form content">
                      <div className="field" style="display:inline">
                        <textarea rows="1" style="max-height: 150px"
                                  config={function (element, isInit, ctx) {
                                    if(!isInit) {
                                      if(wsCtrl.userId.length == 0){
                                        $(element).on('click input', function(){
                                          api.signin();
                                          element.value = ''
                                        })
                                      } else {
                                        $(element).on('input', function(){
                                          wsCtrl.inputChat(ctrl.id)($(element).val())
                                        });
                                      }
  
                                      var boxNode = document.getElementsByClassName('box-comment')[0];
                                      var box = $('.box-comment');
                                      var curHeight = box.height();
                                      
                                      $(element).textareaAutoSize();
                                      $(element).attrchange({
                                        //trackValues: true,
                                        callback: function (event) {
        
                                          if (box.scrollTop() + box.innerHeight() >= box.prop('scrollHeight')) {
                                            box.css('height', curHeight + 36 - $(element).outerHeight());
                                            boxNode.scrollTop = boxNode.scrollHeight;
                                          } else {
                                            box.css('height', curHeight + 36 - $(element).outerHeight());
                                          }
        
                                        }
                                      });
    
    
                                    }
                                    element.value = wsCtrl.inputChat(ctrl.id)();
                                    if(element.value.length<1){
                                      $(element).css('height', '36.4286px')
                                    }
                                  }
                                  }
                                  onkeypress={function(e){
                                    if(e.keyCode == 13 && !e.shiftKey) {
                                      m.redraw.strategy("none");
                                      if (wsCtrl.inputChat(ctrl.id)().length < 1) {
                                        console.log("chat length < 1")
                                        return false;
                                      } else {
                                        var source = e.target || e.srcElement;
                                        ctrl.add();
                                        return false;
                                      }
                                    }else{
                                      m.redraw.strategy("none");
                                      if(e.keyCode == 13 && e.shiftKey && wsCtrl.inputChat(ctrl.id)().length < 1){
                                        return false;
                                      }
                                    }
                                  }
                                  }
                                  placeholder="Click here to type a chat message"
                        >{}</textarea>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className="three wide column pad-top0">
                <div className="ui divider "></div>
                <div></div>
              </div>
            </div>
          </div>
        </div>
        
        <div className="five wide column">
          <div className="ui mh500">
            <div className="trending">
              <h3>Câu hỏi HOT</h3>
              {!wsCtrl.initHotQuestion?(
                  "loading !!"
              ):(
                  <ul>
                    {wsCtrl.hotQuestion().map(function(question){
                      return (<li>
                        <a className="route" href={"/qa/" + question.id}>{question.question}</a>
                      </li>)
                    })}
                  </ul>
              )}
            </div>
          </div>
        </div>
      </div>
  )
}
    
    
module.exports = RoomView;