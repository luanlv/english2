var wsCtrl = require('../ws/_wsCtrl.js');
var api = require('./api.msx');
var Head = require('./partials/head.msx');
var Quickview = require('./partials/quickview.msx');
var Overlay = require('./partials/overlay.msx');
var Sidebar = require('./partials/sidebar.msx');
var Nav = {
  controller: function(){
    var ctrl = this;
    
  },
  view: function(ctrl){
    return [
      <div
        config={function(){
          init();
        }}
      >
      {[Head(ctrl),
      Sidebar(ctrl),
      Quickview(ctrl),
      Overlay(ctrl),
      ]}</div>
    ]
  }
};


var init = function(){
  (function($) {
    'use strict';
    console.log("run init");
    // Initialize layouts and plugins
    (typeof angular === 'undefined') && $.Pages.init();
  })(window.jQuery);
  
  
  (function($) {
    
    'use strict';
    $(document).ready(function() {
      // Initializes search overlay plugin.
      // Replace onSearchSubmit() and onKeyEnter() with
      // your logic to perform a search and display results
      $(".list-view-wrapper").scrollbar();
      
      $('[data-pages="search"]').search({
        // Bind elements that are included inside search overlay
        searchField: '#overlay-search',
        closeButton: '.overlay-close',
        suggestions: '#overlay-suggestions',
        brand: '.brand',
        // Callback that will be run when you hit ENTER button on search box
        onSearchSubmit: function(searchString) {
          console.log("Search for: " + searchString);
        },
        // Callback that will be run whenever you enter a key into search box.
        // Perform any live search here.
        onKeyEnter: function(searchString) {
          console.log("Live search for: " + searchString);
          var searchField = $('#overlay-search');
          var searchResults = $('.search-results');
          
          /*
           Do AJAX call here to get search results
           and update DOM and use the following block
           'searchResults.find('.result-name').each(function() {...}'
           inside the AJAX callback to update the DOM
           */
          
          // Timeout is used for DEMO purpose only to simulate an AJAX call
          clearTimeout($.data(this, 'timer'));
          searchResults.fadeOut("fast"); // hide previously returned results until server returns new results
          var wait = setTimeout(function() {
            
            searchResults.find('.result-name').each(function() {
              if (searchField.val().length != 0) {
                $(this).html(searchField.val());
                searchResults.fadeIn("fast"); // reveal updated results
              }
            });
          }, 500);
          $(this).data('timer', wait);
          
        }
      })
      
    });
    
    
    $('.panel-collapse label').on('click', function(e){
      e.stopPropagation();
    })
    
  })(window.jQuery);
};

module.exports = Nav;

